window.greenthumb=angular.module("gtApp",["ngRoute","ui.bootstrap"]),greenthumb.config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"pages/home.html"}).when("/about/",{templateUrl:"pages/about.html"}).when("/contact/",{templateUrl:"pages/contact.html"}).when("/garden/:gardenID/",{templateUrl:"partials/garden.html"}).when("/garden/",{templateUrl:"partials/garden.html"}).otherwise({templateUrl:"pages/home.html"})}]),window.greenthumb.factory("gtGetData",["$http","$rootScope",function($http,$rootScope){"use strict";var data={params:{dates:function(){var today=moment(),obj={main:today.clone(),main_pos:Math.round(10*(8.333*(today.format("M")-1)+today.format("D")/today.daysInMonth()*8.333))/10,today:today,today_pos:Math.round(10*(8.333*(today.format("M")-1)+today.format("D")/today.daysInMonth()*8.333))/10};return obj}()},model:[],gardens:[],activeGarden:{},produce:window.gtProduce};return data.create={garden:function(garden){var self=this;return self.label=garden.label,self.plantOnSat=garden.options.plantOnSat,self.capHarvest=garden.options.capHarvest,angular.isDefined(garden.options.frost_spring)&&angular.isDefined(garden.options.frost_spring.month)?(self.frost_spring={date:moment().set("month",garden.options.frost_spring.month).set("date",garden.options.frost_spring.date)},self.frost_spring.position=Math.floor(100*self.frost_spring.date.format("DDD")/365*10)/10):angular.isDefined(garden.options.frost_spring)&&garden.options.frost_spring===!1?self.frost_spring="No Risk Of Frost":self.frost_spring="Not Set",angular.isDefined(garden.options.frost_fall)&&angular.isDefined(garden.options.frost_fall.month)?(self.frost_fall={date:moment().set("month",garden.options.frost_fall.month).set("date",garden.options.frost_fall.date)},self.frost_fall.position=Math.floor(100*(365-self.frost_fall.date.format("DDD"))/365*10)/10):angular.isDefined(garden.options.frost_fall)&&garden.options.frost_fall===!1?self.frost_fall="No Risk Of Frost":self.frost_fall="Not Set",self.zone=garden.options.zone||"Not Set",self.areas=[],self.tasks={},data.activeGarden=self,self.addArea=function(areaObj,addToModel){var area=new data.create.area(areaObj);area.garden=self,self.areas.push(area),addToModel===!0&&data.model.areas.push(areaObj)},self.addProduce=function(produceObj,areaID,addToModel){var produce=new data.create.produce(produceObj);produce.area=self.areas[areaID],self.areas[areaID].produce.push(produce),addToModel===!0&&console.log(self)},angular.isDefined(garden.areas)&&garden.areas.length>0&&angular.forEach(garden.areas,function(value1,key1){self.addArea(value1),angular.isDefined(value1.produce)&&value1.produce.length>0&&angular.forEach(value1.produce,function(value2){self.addProduce(value2,key1)})}),self},area:function(area){var self=this;return self.label=area.label,self.width=area.width,self.length=area.length,self.produce=[],self.seasons={spring:!1,summmer:!1,fall:!1,winter:!1},self},produce:function(produce){var self=this;if("parent"in data.produce[produce.id]){var parentID=data.produce[produce.id].parent;angular.copy(data.produce[parentID],self),self=angular.extend(self,data.produce[produce.id]),self.img=parentID,self.label_parent=data.produce[parentID].label,self.label_full=self.label+" "+self.label_parent,self.id_parent=parentID}else angular.copy(data.produce[produce.id],self),self.img=produce.id,self.label_full=self.label,self.label_parent=self.label;self.id=produce.id,self.seedling=parseInt(self.plantOutside)-parseInt(self.plantInside),self.label_short=self.label.charAt(0)+self.label.charAt(1),self.numPlants=produce.numPlants;var plantMe=moment().set("month",produce.plantDate.month).set("date",produce.plantDate.date);return data.activeGarden.plantOnSat===!0&&plantMe.day("Saturday"),self.dates={seedlings:plantMe.clone().subtract(self.seedling,"weeks"),plant:plantMe,harvest_start:plantMe.clone().add(self.maturity,"days"),harvest_complete:plantMe.clone().add(7*self.harvest+self.maturity,"days")},self.dom={wSeedlings:Math.round(7*self.seedling*100/365*10)/10+1,wGrowing:Math.round(100*self.maturity/365*10)/10,wHarvesting:Math.round(7*self.harvest*100/365*10)/10+1,pSeedlings:Math.round(10*(8.333*(self.dates.seedlings.format("M")-1)+self.dates.seedlings.format("D")/self.dates.seedlings.daysInMonth()*8.333))/10,pGrowing:Math.round(10*(8.333*(self.dates.plant.format("M")-1)+self.dates.plant.format("D")/self.dates.plant.daysInMonth()*8.333))/10,pHarvesting:Math.round(10*(8.333*(self.dates.harvest_start.format("M")-1)+self.dates.harvest_start.format("D")/self.dates.harvest_start.daysInMonth()*8.333))/10-1},self.dates.plant.isBetween(moment().month("March").subtract(1,"month"),moment().month("May").date(31).add(1,"month"),"month")?self.season="spring":self.dates.plant.isBetween(moment().month("June").subtract(1,"month"),moment().month("August").date(31).add(1,"month"),"month")?self.season="summer":self.dates.plant.isBetween(moment().month("September").subtract(1,"month"),moment().month("November").date(30).add(1,"month"),"month")?self.season="fall":(self.dates.plant.isBetween(moment().month("November").subtract(1,"month"),moment().month("February").add(1,"month").add(1,"year"),"month")||self.dates.plant.isBetween(moment().month("January").subtract(1,"month"),moment().month("Feb").add(1,"month"),"month"))&&(self.season="winter"),self.plantInsideWarm=self.plantInside+4,self.plantOutsideWarm=self.plantOutside+4,data.create.tasks(self),self},tasks:function(produce){angular.forEach(produce.dates,function(value,key){var str;switch(key){case"seedlings":str="Start seedlings for ",produce.directSow===!0&&(str="Direct sow "+produce.plantCount+" "+produce.label+" "+produce.label_parent+" seeds");break;case"plant":str="Plant ";break;case"harvest_start":str="Start harvesting ";break;case"harvest_complete":str="Complete harvesting "}produce.numPlants&&(str+=produce.numPlants+" "),str+=produce.label+" ",produce.label_parent&&produce.label_parent!==produce.label&&(str+=produce.label_parent),angular.isObject(data.activeGarden.tasks[value.format("YYYYMMDD")])||(data.activeGarden.tasks[value.format("YYYYMMDD")]={label:value.format("dddd, MMMM Do"),items:[],date:value}),data.activeGarden.tasks[value.format("YYYYMMDD")].items.push(str)})}},data.load=function(url){$http({method:"GET",url:url}).then(function($response){data.model=$response.data[0];var garden=new data.create.garden($response.data[0]);data.gardens.push(garden),$rootScope.$broadcast("dataPassed")})},data.update=function(params){angular.merge(data.params,params),data.params.dates.main_pos=Math.round(10*(8.333*(data.params.dates.main.format("M")-1)+data.params.dates.main.format("D")/data.params.dates.main.daysInMonth()*8.333))/10,$rootScope.$broadcast("dataPassed")},data}]),window.greenthumb.factory("gtShared",["$rootScope",function($rootScope){"use strict";var data={params:{gardenID:!1,areaID:!1,produceID:!1}};return data.update=function(params){angular.merge(data.params,params),$rootScope.$broadcast("gtShared")},data}]),window.greenthumb.controller("gtGarden",["$scope","$q","gtGetData","$routeParams","gtShared",function($scope,$q,gtGetData,$routeParams,gtShared){"use strict";$scope.Math=window.Math,$scope.gardenID=$routeParams.gardenID,$scope.taskpanel="next","mine"!==$scope.gardenID&&gtGetData.load("src/scripts/models/"+$scope.gardenID+".js"),$scope.addProduceStep1=function(id){gtShared.areaID=id},$scope.gtDetails=function(produce,areaID,produceID){var params={areaID:areaID,produceID:produceID,type:"produce",label:produce.label_full};gtShared.update(params),$scope.gtSelection=produce},$scope.toggleTasks=function(pane){$scope.taskpanel=pane},$scope.$on("dataPassed",function(){console.log(gtGetData),$scope.garden=gtGetData.activeGarden.areas,$scope.label=gtGetData.activeGarden.label,$scope.frost_spring=gtGetData.activeGarden.frost_spring.position,$scope.frost_fall=gtGetData.activeGarden.frost_fall.position,$scope.main_pos=gtGetData.params.dates.main_pos,$scope.today_pos=gtGetData.params.dates.today_pos,$scope.tasksToday=[],$scope.tasksNext=[],$scope.tasksPrev=[],angular.isDefined(gtGetData.activeGarden.tasks[gtGetData.params.dates.main.format("YYYYMMDD")])?$scope.tasksToday.push(gtGetData.activeGarden.tasks[gtGetData.params.dates.main.format("YYYYMMDD")]):$scope.tasksToday.push({label:gtGetData.params.dates.main.format("dddd, MMMM Do"),items:["Nothing for Today!"]}),angular.forEach(gtGetData.activeGarden.tasks,function(value){value.date.isBetween(gtGetData.params.dates.main.clone().add(1,"day"),gtGetData.params.dates.main.clone().add(2,"weeks"))?$scope.tasksNext.push(value):value.date.isBetween(gtGetData.params.dates.main.clone().subtract(2,"weeks"),gtGetData.params.dates.main)&&$scope.tasksPrev.push(value)}),$scope.areaDelete=function(areaID,label){var params={areaID:areaID,type:"area",label:label};gtShared.update(params)}})}]).directive("tasks",[function(){"use strict";return{restrict:"E",scope:{data:"="},templateUrl:"partials/tasks-entry.html"}}]).directive("areas",[function(){"use strict";return{restrict:"E",scope:{data:"="},replace:!0,templateUrl:"partials/calendar-row.html"}}]),window.greenthumb.controller("gtInteractive",["$scope","$q","$rootScope","gtGetData","gtShared",function($scope,$q,$rootScope,gtGetData,gtShared){"use strict";$scope.addProduce={},$scope.error={date:!1},$scope.open=function(){$scope.status.opened=!0},$scope.status={opened:!1},$scope.options={};var produce=[];angular.forEach(gtGetData.produce,function(value,key){var searchObj={id:key,img:key,label:value.label};value.parent&&(searchObj.img=value.parent,searchObj.label=gtGetData.produce[value.parent].label+", "+searchObj.label),produce.push(searchObj)}),$scope.produce=produce,$scope.$watch("gtSearchTerm",function(){"undefined"!=typeof $scope.gtSearchTerm&&"undefined"!=typeof $scope.gtSearchTerm.id&&($scope.error.plant=!1,$scope.addProduceStep2($scope.gtSearchTerm.id))}),$scope.$watch("options.date",function(){"undefined"!=typeof $scope.options.date&&""!==$scope.options.date&&null!==$scope.options.date?$scope.error.date=!0:$scope.error.date=!1}),$scope.$on("gtShared",function(){console.log(gtShared.params),$scope["delete"]=gtShared.params}),$scope.area={add:function(){var obj={label:$scope.area.label,width:12,length:12};gtGetData.activeGarden.addArea(obj),$("#gtModalArea").modal("hide")}},$scope.areaAdd=function(){var obj={label:$scope.area.label,width:12,length:12};gtGetData.activeGarden.addArea(obj,!0),$("#gtModalArea").modal("hide")},$scope.deleteStep1=function(){$("#gtModalDetails").modal("hide"),$("#gtModalDelete").modal("show")},$scope.deleteStep2=function(){"produce"===gtShared.params.type?gtGetData.activeGarden.areas[gtShared.params.areaID].produce.splice(gtShared.params.produceID,gtShared.params.produceID+1):"area"===gtShared.params.type&&gtGetData.activeGarden.areas.splice(gtShared.params.areaID,gtShared.params.areaID+1),$rootScope.$broadcast("dataPassed"),$("#gtModalDelete").modal("hide")},$scope.addProduceStep2=function(id){$scope.addProduce.id=id;var searchProduce;gtGetData.produce[id].parent?(searchProduce=angular.copy(gtGetData.produce[gtGetData.produce[id].parent]),angular.merge(searchProduce,gtGetData.produce[id])):searchProduce=angular.copy(gtGetData.produce[id]),$scope.selection=searchProduce,$scope.dateRange={},moment.isMoment(gtGetData.activeGarden.frost_spring.date)?($scope.dateRange.frost_spring=gtGetData.activeGarden.frost_spring.date.format("MMMM Do"),$scope.dateRange.warm_earliest=gtGetData.activeGarden.frost_spring.date.clone().add(searchProduce.plantOutside,"weeks").add(4,"weeks").format("MMMM Do"),$scope.dateRange.cold_earliest=gtGetData.activeGarden.frost_spring.date.clone().add(searchProduce.plantOutside,"weeks").format("MMMM Do")):"No Risk Of Frost"===gtGetData.activeGarden.frost_spring?$scope.dateRange.frost_spring="No Risk Of Frost":$scope.dateRange.frost_spring="Not Set",moment.isMoment(gtGetData.activeGarden.frost_fall.date)?($scope.dateRange.frost_fall=gtGetData.activeGarden.frost_fall.date.format("MMMM Do"),$scope.dateRange.warm_latest=gtGetData.activeGarden.frost_fall.date.clone().subtract(searchProduce.maturity,"day").subtract(4,"weeks").format("MMMM Do"),$scope.dateRange.cold_latest=gtGetData.activeGarden.frost_fall.date.clone().subtract(searchProduce.maturity,"day").format("MMMM Do")):"No Risk Of Frost"===gtGetData.activeGarden.frost_fall?$scope.dateRange.frost_fall="No Risk Of Frost":$scope.dateRange.frost_fall="Not Set",moment.isMoment(gtGetData.activeGarden.frost_spring.date)&&moment.isMoment(gtGetData.activeGarden.frost_fall.date)&&($scope.dateRange.growingseason=gtGetData.activeGarden.frost_fall.date.format("DDD")-gtGetData.activeGarden.frost_spring.date.format("DDD"))},$scope.addProduceStep3=function(){return $scope.error.date===!1?!1:($scope.addProduce.plantDate={month:parseInt(moment($scope.options.date).format("M")-1),date:parseInt(moment($scope.options.date).format("D")-1)},gtGetData.activeGarden.addProduce($scope.addProduce,gtShared.areaID,!0),$rootScope.$broadcast("dataPassed"),$("#gtModalAdd").modal("hide"),$scope.addProduce={},$scope.gtSearchTerm="",void($scope.selection={}))},$("#gtModalArea").on("shown.bs.modal",function(){$("#areaAdd").focus()}),$("#gtModalAdd").on("shown.bs.modal",function(){$("#gtProduceSearch input")[1].focus()})}]),window.greenthumb.controller("gtFilter",["$scope","$q","gtGetData",function($scope,$q,gtGetData){"use strict";$scope.open=function(){$scope.status.opened=!0},$scope.status={opened:!1},$scope.date=new Date,$scope.filterSort=function(){var params={dates:{main:moment($scope.date)}};gtGetData.update(params)}}]);